{"version":3,"sources":["assets/jumboImage.jpeg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Card","style","width","Img","variant","src","Body","Title","Text","class","href","About","Contact","Container","fluid","Form","Group","controlId","Label","Control","type","placeholder","className","Button","NoMatch","Layout","props","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","to","jumboImage","Jumbotron","App","Fragment","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48220013.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jumboImage.3d8d4921.jpeg\";","import React from 'react'\nimport Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n\nexport const Home = () => (\n<Card style={{ width: '18rem' }}>\n  <Card.Img variant=\"top\" src=\"\" />\n  <Card.Body>\n    <Card.Title>Skyes Portfolio Homework</Card.Title>\n    <Card.Text>\n    <h5 class=\"card-title container-title\">1: Code Refactor</h5>\n        <hr />\n        <p class=\"card-text\">\n        <a href = \"https://github.com/webdevelopmentdiva/Code-Refactor\">https://github.com/webdevelopmentdiva/Code-Refactor</a>\n        </p>\n        <p class=\"card-text\">\n          <a href=\" https://webdevelopmentdiva.github.io/Code-Refactor/\">https://webdevelopmentdiva.github.io/Code-Refactor/</a>\n        </p>\n\n        <h5 class=\"card-title container-title\">2: Responsiveness Portfolio</h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href= \"https://github.com/webdevelopmentdiva/Portfolio\"> https://github.com/webdevelopmentdiva/Portfolio</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://webdevelopmentdiva.github.io/Portfolio/\">https://webdevelopmentdiva.github.io/Portfolio/</a>\n        </p>\n\n        <h5 class=\"card-title container-title\">3: Password Generator</h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href=\"https://github.com/webdevelopmentdiva/Password-Generator-JS\">https://github.com/webdevelopmentdiva/Password-Generator-JS</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://webdevelopmentdiva.github.io/Password-Generator-JS/\">https://webdevelopmentdiva.github.io/Password-Generator-JS/</a>\n        </p>\n\n        <h5 class=\"card-title container-title\">4: Code Quiz</h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href=\"https://github.com/webdevelopmentdiva/Code-Quiz\">https://github.com/webdevelopmentdiva/Code-Quiz</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://webdevelopmentdiva.github.io/Code-Quiz/\">https://webdevelopmentdiva.github.io/Code-Quiz/</a>\n        </p>\n\n        <h5 class=\"card-title container-title\">5: Day Planner</h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href=\"https://github.com/webdevelopmentdiva/daily-schedule\">https://github.com/webdevelopmentdiva/daily-schedule</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://webdevelopmentdiva.github.io/daily-schedule/\">https://webdevelopmentdiva.github.io/daily-schedule/</a>\"\n        </p>\n\n        <h5 class=\"card-title container-title\">6: Weather Dashboard</h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href=\"https://github.com/webdevelopmentdiva/weather-dashboard\">https://github.com/webdevelopmentdiva/weather-dashboard</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://webdevelopmentdiva.github.io/weather-dashboard/\">https://webdevelopmentdiva.github.io/weather-dashboard/</a>\"\n        </p>\n        <h5 class=\"card-title container-title\">17: Fitness Tracker\n        </h5>\n        <hr />\n        <p class=\"card-text\">\n         <a href=\"https://github.com/webdevelopmentdiva/weather-dashboard\">https://github.com/webdevelopmentdiva/weather-dashboard</a>\n        </p>\n        <p class=\"card-text\">\n         <a href=\"https://fitness-tracker101010.herokuapp.com/?id=5ef67786cffd65001771f045\">https://github.com/webdevelopmentdiva/fitness-tracker\"> https://webdevelopmentdiva.github.io/fitness-tracker/\"</a>\n        </p>\n    </Card.Text>\n  </Card.Body>\n</Card>\n    );\n","import React from 'react'\n\nexport const About = () => (\n        <div>\n            <h5>About Me</h5>\n            <hr />\n            <p>I'm Skye! I am passionate about making peoples visions become a reality!</p>\n            <p>I am junior developer and I specialize in front end.</p>\n            </div>\n    )\n;","import React from 'react'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Container } from 'react-bootstrap';\n\n\nexport const Contact = () => (\n<Container fluid>\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <br />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n</Container>\n    );","import React from 'react'\n\nexport const NoMatch = () => (\n        <div>\n            <h2>No Match</h2>\n        </div>\n    );","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport const Layout = (props) => (\n    <Container>\n        {props.children}\n    </Container>\n)","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n.navbar {\n    background-color: #222;\n}\n\na, .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n        color: white;\n    }\n}\n`;\n\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar expand=\"lg\">\n            <Navbar.Brand href=\"/\">Code Life</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Item>\n                        <Nav.Link> \n                            <Link to=\"/\">Home</Link>\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link>\n                            <Link to=\"/About\">About</Link>\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link>\n                            <Link to=\"/Contact\">Contact</Link>\n                        </Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport jumboImage from \"../assets/jumboImage.jpeg\";\n\nconst Styles = styled.div`\n.jumbo {\n    background: url(${jumboImage}) no-repeat fixed bottom;\n    background-size: cover;\n    color: #efefef;\n    height: 200px;\n    position: relative;\n    z-index: -2;\n}\n\n.overlay {\n    background-color: #000;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n}\n`;\n\nexport const Jumbotron = () => (\n<Styles>\n    <Jumbo fluid className=\"jumbo\">\n        <div className=\"overlay\"></div>\n        <Container>\n            <h1>Welcome</h1>\n            <p>To my portfolio</p>\n        </Container>\n    </Jumbo>\n</Styles>\n)","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Home\"\nimport { About } from \"./About\"\nimport { Contact } from \"./Contact\"\nimport { NoMatch } from \"./NoMatch\"\nimport { Layout } from \"./components/Layout\";\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Jumbotron } from \"./components/Jumbotron\";\n\nclass App extends Component {\nrender() {\n  return (\n    <React.Fragment>\n      <Router>\n      <NavigationBar />\n      <Jumbotron />\n      <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route component={NoMatch} />\n      </Switch>\n      </Layout>\n      </Router>\n    </React.Fragment>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}